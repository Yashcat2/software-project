"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@kinde-oss";
exports.ids = ["vendor-chunks/@kinde-oss"];
exports.modules = {

/***/ "(ssr)/./node_modules/@kinde-oss/kinde-auth-nextjs/dist/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@kinde-oss/kinde-auth-nextjs/dist/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CreateOrgLink: () => (/* binding */ q),\n/* harmony export */   KindeProvider: () => (/* binding */ N),\n/* harmony export */   LoginLink: () => (/* binding */ B),\n/* harmony export */   LogoutLink: () => (/* binding */ V),\n/* harmony export */   RegisterLink: () => (/* binding */ H),\n/* harmony export */   useKindeAuth: () => (/* binding */ x),\n/* harmony export */   useKindeBrowserClient: () => (/* binding */ K)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction a(e, t) {\n    var r = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var n = Object.getOwnPropertySymbols(e);\n        t && (n = n.filter(function(t) {\n            return Object.getOwnPropertyDescriptor(e, t).enumerable;\n        })), r.push.apply(r, n);\n    }\n    return r;\n}\nfunction c(e) {\n    for(var t = 1; t < arguments.length; t++){\n        var r = null != arguments[t] ? arguments[t] : {};\n        t % 2 ? a(Object(r), !0).forEach(function(t) {\n            g(e, t, r[t]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : a(Object(r)).forEach(function(t) {\n            Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(r, t));\n        });\n    }\n    return e;\n}\nfunction u() {\n    u = function() {\n        return t;\n    };\n    var e, t = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function(e, t, r) {\n        e[t] = r.value;\n    }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", s = i.toStringTag || \"@@toStringTag\";\n    function l(e, t, r) {\n        return Object.defineProperty(e, t, {\n            value: r,\n            enumerable: !0,\n            configurable: !0,\n            writable: !0\n        }), e[t];\n    }\n    try {\n        l({}, \"\");\n    } catch (e) {\n        l = function(e, t, r) {\n            return e[t] = r;\n        };\n    }\n    function f(e, t, r, n) {\n        var i = t && t.prototype instanceof m ? t : m, a = Object.create(i.prototype), c = new S(n || []);\n        return o(a, \"_invoke\", {\n            value: I(e, r, c)\n        }), a;\n    }\n    function g(e, t, r) {\n        try {\n            return {\n                type: \"normal\",\n                arg: e.call(t, r)\n            };\n        } catch (e) {\n            return {\n                type: \"throw\",\n                arg: e\n            };\n        }\n    }\n    t.wrap = f;\n    var p = \"suspendedStart\", h = \"suspendedYield\", d = \"executing\", v = \"completed\", y = {};\n    function m() {}\n    function b() {}\n    function w() {}\n    var E = {};\n    l(E, a, function() {\n        return this;\n    });\n    var T = Object.getPrototypeOf, O = T && T(T(D([])));\n    O && O !== r && n.call(O, a) && (E = O);\n    var _ = w.prototype = m.prototype = Object.create(E);\n    function k(e) {\n        [\n            \"next\",\n            \"throw\",\n            \"return\"\n        ].forEach(function(t) {\n            l(e, t, function(e) {\n                return this._invoke(t, e);\n            });\n        });\n    }\n    function L(e, t) {\n        function r(o, i, a, c) {\n            var u = g(e[o], e, i);\n            if (\"throw\" !== u.type) {\n                var s = u.arg, l = s.value;\n                return l && \"object\" == typeof l && n.call(l, \"__await\") ? t.resolve(l.__await).then(function(e) {\n                    r(\"next\", e, a, c);\n                }, function(e) {\n                    r(\"throw\", e, a, c);\n                }) : t.resolve(l).then(function(e) {\n                    s.value = e, a(s);\n                }, function(e) {\n                    return r(\"throw\", e, a, c);\n                });\n            }\n            c(u.arg);\n        }\n        var i;\n        o(this, \"_invoke\", {\n            value: function(e, n) {\n                function o() {\n                    return new t(function(t, o) {\n                        r(e, n, t, o);\n                    });\n                }\n                return i = i ? i.then(o, o) : o();\n            }\n        });\n    }\n    function I(t, r, n) {\n        var o = p;\n        return function(i, a) {\n            if (o === d) throw Error(\"Generator is already running\");\n            if (o === v) {\n                if (\"throw\" === i) throw a;\n                return {\n                    value: e,\n                    done: !0\n                };\n            }\n            for(n.method = i, n.arg = a;;){\n                var c = n.delegate;\n                if (c) {\n                    var u = R(c, n);\n                    if (u) {\n                        if (u === y) continue;\n                        return u;\n                    }\n                }\n                if (\"next\" === n.method) n.sent = n._sent = n.arg;\n                else if (\"throw\" === n.method) {\n                    if (o === p) throw o = v, n.arg;\n                    n.dispatchException(n.arg);\n                } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n                o = d;\n                var s = g(t, r, n);\n                if (\"normal\" === s.type) {\n                    if (o = n.done ? v : h, s.arg === y) continue;\n                    return {\n                        value: s.arg,\n                        done: n.done\n                    };\n                }\n                \"throw\" === s.type && (o = v, n.method = \"throw\", n.arg = s.arg);\n            }\n        };\n    }\n    function R(t, r) {\n        var n = r.method, o = t.iterator[n];\n        if (o === e) return r.delegate = null, \"throw\" === n && t.iterator.return && (r.method = \"return\", r.arg = e, R(t, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n        var i = g(o, t.iterator, r.arg);\n        if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n        var a = i.arg;\n        return a ? a.done ? (r[t.resultName] = a.value, r.next = t.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = e), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n    }\n    function P(e) {\n        var t = {\n            tryLoc: e[0]\n        };\n        1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), this.tryEntries.push(t);\n    }\n    function U(e) {\n        var t = e.completion || {};\n        t.type = \"normal\", delete t.arg, e.completion = t;\n    }\n    function S(e) {\n        this.tryEntries = [\n            {\n                tryLoc: \"root\"\n            }\n        ], e.forEach(P, this), this.reset(!0);\n    }\n    function D(t) {\n        if (t || \"\" === t) {\n            var r = t[a];\n            if (r) return r.call(t);\n            if (\"function\" == typeof t.next) return t;\n            if (!isNaN(t.length)) {\n                var o = -1, i = function r() {\n                    for(; ++o < t.length;)if (n.call(t, o)) return r.value = t[o], r.done = !1, r;\n                    return r.value = e, r.done = !0, r;\n                };\n                return i.next = i;\n            }\n        }\n        throw new TypeError(typeof t + \" is not iterable\");\n    }\n    return b.prototype = w, o(_, \"constructor\", {\n        value: w,\n        configurable: !0\n    }), o(w, \"constructor\", {\n        value: b,\n        configurable: !0\n    }), b.displayName = l(w, s, \"GeneratorFunction\"), t.isGeneratorFunction = function(e) {\n        var t = \"function\" == typeof e && e.constructor;\n        return !!t && (t === b || \"GeneratorFunction\" === (t.displayName || t.name));\n    }, t.mark = function(e) {\n        return Object.setPrototypeOf ? Object.setPrototypeOf(e, w) : (e.__proto__ = w, l(e, s, \"GeneratorFunction\")), e.prototype = Object.create(_), e;\n    }, t.awrap = function(e) {\n        return {\n            __await: e\n        };\n    }, k(L.prototype), l(L.prototype, c, function() {\n        return this;\n    }), t.AsyncIterator = L, t.async = function(e, r, n, o, i) {\n        void 0 === i && (i = Promise);\n        var a = new L(f(e, r, n, o), i);\n        return t.isGeneratorFunction(r) ? a : a.next().then(function(e) {\n            return e.done ? e.value : a.next();\n        });\n    }, k(_), l(_, s, \"Generator\"), l(_, a, function() {\n        return this;\n    }), l(_, \"toString\", function() {\n        return \"[object Generator]\";\n    }), t.keys = function(e) {\n        var t = Object(e), r = [];\n        for(var n in t)r.push(n);\n        return r.reverse(), function e() {\n            for(; r.length;){\n                var n = r.pop();\n                if (n in t) return e.value = n, e.done = !1, e;\n            }\n            return e.done = !0, e;\n        };\n    }, t.values = D, S.prototype = {\n        constructor: S,\n        reset: function(t) {\n            if (this.prev = 0, this.next = 0, this.sent = this._sent = e, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = e, this.tryEntries.forEach(U), !t) for(var r in this)\"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = e);\n        },\n        stop: function() {\n            this.done = !0;\n            var e = this.tryEntries[0].completion;\n            if (\"throw\" === e.type) throw e.arg;\n            return this.rval;\n        },\n        dispatchException: function(t) {\n            if (this.done) throw t;\n            var r = this;\n            function o(n, o) {\n                return c.type = \"throw\", c.arg = t, r.next = n, o && (r.method = \"next\", r.arg = e), !!o;\n            }\n            for(var i = this.tryEntries.length - 1; i >= 0; --i){\n                var a = this.tryEntries[i], c = a.completion;\n                if (\"root\" === a.tryLoc) return o(\"end\");\n                if (a.tryLoc <= this.prev) {\n                    var u = n.call(a, \"catchLoc\"), s = n.call(a, \"finallyLoc\");\n                    if (u && s) {\n                        if (this.prev < a.catchLoc) return o(a.catchLoc, !0);\n                        if (this.prev < a.finallyLoc) return o(a.finallyLoc);\n                    } else if (u) {\n                        if (this.prev < a.catchLoc) return o(a.catchLoc, !0);\n                    } else {\n                        if (!s) throw Error(\"try statement without catch or finally\");\n                        if (this.prev < a.finallyLoc) return o(a.finallyLoc);\n                    }\n                }\n            }\n        },\n        abrupt: function(e, t) {\n            for(var r = this.tryEntries.length - 1; r >= 0; --r){\n                var o = this.tryEntries[r];\n                if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n                    var i = o;\n                    break;\n                }\n            }\n            i && (\"break\" === e || \"continue\" === e) && i.tryLoc <= t && t <= i.finallyLoc && (i = null);\n            var a = i ? i.completion : {};\n            return a.type = e, a.arg = t, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n        },\n        complete: function(e, t) {\n            if (\"throw\" === e.type) throw e.arg;\n            return \"break\" === e.type || \"continue\" === e.type ? this.next = e.arg : \"return\" === e.type ? (this.rval = this.arg = e.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === e.type && t && (this.next = t), y;\n        },\n        finish: function(e) {\n            for(var t = this.tryEntries.length - 1; t >= 0; --t){\n                var r = this.tryEntries[t];\n                if (r.finallyLoc === e) return this.complete(r.completion, r.afterLoc), U(r), y;\n            }\n        },\n        catch: function(e) {\n            for(var t = this.tryEntries.length - 1; t >= 0; --t){\n                var r = this.tryEntries[t];\n                if (r.tryLoc === e) {\n                    var n = r.completion;\n                    if (\"throw\" === n.type) {\n                        var o = n.arg;\n                        U(r);\n                    }\n                    return o;\n                }\n            }\n            throw Error(\"illegal catch attempt\");\n        },\n        delegateYield: function(t, r, n) {\n            return this.delegate = {\n                iterator: D(t),\n                resultName: r,\n                nextLoc: n\n            }, \"next\" === this.method && (this.arg = e), y;\n        }\n    }, t;\n}\nfunction s(e) {\n    var t = function(e, t) {\n        if (\"object\" != typeof e || !e) return e;\n        var r = e[Symbol.toPrimitive];\n        if (void 0 !== r) {\n            var n = r.call(e, t || \"default\");\n            if (\"object\" != typeof n) return n;\n            throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n        }\n        return (\"string\" === t ? String : Number)(e);\n    }(e, \"string\");\n    return \"symbol\" == typeof t ? t : t + \"\";\n}\nfunction l(e, t, r, n, o, i, a) {\n    try {\n        var c = e[i](a), u = c.value;\n    } catch (e) {\n        return void r(e);\n    }\n    c.done ? t(u) : Promise.resolve(u).then(n, o);\n}\nfunction f(e) {\n    return function() {\n        var t = this, r = arguments;\n        return new Promise(function(n, o) {\n            var i = e.apply(t, r);\n            function a(e) {\n                l(i, n, o, a, c, \"next\", e);\n            }\n            function c(e) {\n                l(i, n, o, a, c, \"throw\", e);\n            }\n            a(void 0);\n        });\n    };\n}\nfunction g(e, t, r) {\n    return (t = s(t)) in e ? Object.defineProperty(e, t, {\n        value: r,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n    }) : e[t] = r, e;\n}\nfunction p() {\n    return p = Object.assign ? Object.assign.bind() : function(e) {\n        for(var t = 1; t < arguments.length; t++){\n            var r = arguments[t];\n            for(var n in r)Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);\n        }\n        return e;\n    }, p.apply(this, arguments);\n}\nfunction h(e, t) {\n    if (null == e) return {};\n    var r, n, o = function(e, t) {\n        if (null == e) return {};\n        var r, n, o = {}, i = Object.keys(e);\n        for(n = 0; n < i.length; n++)r = i[n], t.indexOf(r) >= 0 || (o[r] = e[r]);\n        return o;\n    }(e, t);\n    if (Object.getOwnPropertySymbols) {\n        var i = Object.getOwnPropertySymbols(e);\n        for(n = 0; n < i.length; n++)r = i[n], t.indexOf(r) >= 0 || Object.prototype.propertyIsEnumerable.call(e, r) && (o[r] = e[r]);\n    }\n    return o;\n}\nfunction d(e, t) {\n    return function(e) {\n        if (Array.isArray(e)) return e;\n    }(e) || function(e, t) {\n        var r = null == e ? null : \"undefined\" != typeof Symbol && e[Symbol.iterator] || e[\"@@iterator\"];\n        if (null != r) {\n            var n, o, i, a, c = [], u = !0, s = !1;\n            try {\n                if (i = (r = r.call(e)).next, 0 === t) {\n                    if (Object(r) !== r) return;\n                    u = !1;\n                } else for(; !(u = (n = i.call(r)).done) && (c.push(n.value), c.length !== t); u = !0);\n            } catch (e) {\n                s = !0, o = e;\n            } finally{\n                try {\n                    if (!u && null != r.return && (a = r.return(), Object(a) !== a)) return;\n                } finally{\n                    if (s) throw o;\n                }\n            }\n            return c;\n        }\n    }(e, t) || function(e, t) {\n        if (!e) return;\n        if (\"string\" == typeof e) return v(e, t);\n        var r = Object.prototype.toString.call(e).slice(8, -1);\n        \"Object\" === r && e.constructor && (r = e.constructor.name);\n        if (\"Map\" === r || \"Set\" === r) return Array.from(e);\n        if (\"Arguments\" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return v(e, t);\n    }(e, t) || function() {\n        throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }();\n}\nfunction v(e, t) {\n    (null == t || t > e.length) && (t = e.length);\n    for(var r = 0, n = new Array(t); r < t; r++)n[r] = e[r];\n    return n;\n}\nfunction y(e) {\n    if (null != e) return (e = e.trim()).endsWith(\"/\") && (e = e.slice(0, -1)), e;\n}\nvar m = y(process.env.KINDE_SITE_URL), b = process.env.KINDE_POST_LOGIN_ALLOWED_URL_REGEX, w = y(process.env.NEXT_PUBLIC_KINDE_AUTH_API_PATH) || y(process.env.KINDE_AUTH_API_PATH) || \"/api/auth\", E = y(process.env.KINDE_POST_LOGIN_REDIRECT_URL) || y(process.env.KINDE_POST_LOGIN_URL_REDIRECT_URL), T = y(process.env.KINDE_POST_LOGOUT_REDIRECT_URL), O = y(process.env.KINDE_ISSUER_URL), _ = process.env.KINDE_CLIENT_ID, k = process.env.KINDE_CLIENT_SECRET, L = process.env.KINDE_AUDIENCE, I = y(process.env.KINDE_COOKIE_DOMAIN), R = process.env.KINDE_SCOPE || \"openid profile email offline\", P = {\n    isDebugMode: \"true\" === process.env.KINDE_DEBUG_MODE,\n    apiPath: w,\n    initialState: {\n        accessToken: null,\n        idToken: null,\n        isAuthenticated: !1,\n        isLoading: !0,\n        organization: null,\n        permissions: [],\n        user: null,\n        userOrganizations: [],\n        getAccessToken: function() {\n            return null;\n        },\n        getBooleanFlag: function() {\n            return null;\n        },\n        getClaim: function() {\n            return null;\n        },\n        getFlag: function() {\n            return null;\n        },\n        getIdToken: function() {\n            return null;\n        },\n        getIntegerFlag: function() {\n            return null;\n        },\n        getOrganization: function() {\n            return null;\n        },\n        getPermission: function() {\n            return null;\n        },\n        getPermissions: function() {\n            return [];\n        },\n        getStringFlag: function() {\n            return null;\n        },\n        getToken: function() {\n            return null;\n        },\n        getUser: function() {\n            return null;\n        },\n        getUserOrganizations: function() {\n            return null;\n        },\n        refreshData: function() {\n            return null;\n        }\n    },\n    SESSION_PREFIX: \"pkce-verifier\",\n    redirectURL: m,\n    postLoginRedirectURL: E,\n    postLoginAllowedURLRegex: b,\n    issuerURL: O,\n    clientID: _,\n    clientSecret: k,\n    postLogoutRedirectURL: T,\n    audience: L ? L.split(\" \") : \"\",\n    cookieDomain: I,\n    responseType: \"code\",\n    codeChallengeMethod: \"S256\",\n    redirectRoutes: {\n        callback: \"\".concat(w, \"/kinde_callback\")\n    },\n    issuerRoutes: {\n        logout: \"/logout\",\n        login: \"/oauth2/auth\",\n        register: \"/oauth2/auth\",\n        token: \"/oauth2/token\",\n        profile: \"/oauth2/v2/user_profile\"\n    },\n    clientOptions: {\n        audience: L ? L.split(\" \") : \"\",\n        authDomain: O || \"\",\n        clientId: _ || \"\",\n        clientSecret: k || \"\",\n        logoutRedirectURL: T || \"\",\n        redirectURL: \"\".concat(m).concat(w, \"/kinde_callback\"),\n        frameworkVersion: \"2.5.1\",\n        scope: R\n    },\n    grantType: \"AUTHORIZATION_CODE\"\n}, U = function(e) {\n    return e && /^[a-zA-Z0-9_-]+$/.test(e) ? e : null;\n}, S = {\n    login: U(process.env.KINDE_AUTH_LOGIN_ROUTE) || \"login\",\n    logout: U(process.env.KINDE_AUTH_LOGOUT_ROUTE) || \"logout\",\n    register: U(process.env.KINDE_AUTH_REGISTER_ROUTE) || \"register\",\n    createOrg: U(process.env.KINDE_AUTH_CREATEORG_ROUTE) || \"create_org\",\n    health: U(process.env.KINDE_AUTH_HEALTH_ROUTE) || \"health\",\n    setup: U(process.env.KINDE_AUTH_SETUP_ROUTE) || \"setup\"\n}, D = {\n    s: \"string\",\n    i: \"integer\",\n    b: \"boolean\"\n}, A = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(c({}, P.initialState)), x = function() {\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(A);\n}, j = function() {\n    var e = f(u().mark(function e(t) {\n        var r;\n        return u().wrap(function(e) {\n            for(;;)switch(e.prev = e.next){\n                case 0:\n                    return e.prev = 0, e.next = 3, fetch(t);\n                case 3:\n                    r = e.sent, e.next = 9;\n                    break;\n                case 6:\n                    throw e.prev = 6, e.t0 = e.catch(0), new Error(\"Failed to fetch token\");\n                case 9:\n                    if (!r.ok) {\n                        e.next = 15;\n                        break;\n                    }\n                    return e.next = 12, r.json();\n                case 12:\n                    return e.abrupt(\"return\", e.sent);\n                case 15:\n                    if (401 !== r.status) {\n                        e.next = 17;\n                        break;\n                    }\n                    throw new Error(\"Failed to fetch token\");\n                case 17:\n                case \"end\":\n                    return e.stop();\n            }\n        }, e, null, [\n            [\n                0,\n                6\n            ]\n        ]);\n    }));\n    return function(t) {\n        return e.apply(this, arguments);\n    };\n}(), N = function(t) {\n    var r = t.children, a = \"\".concat(P.apiPath, \"/\").concat(S.setup), s = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function() {\n        l();\n    }, [\n        \"checkSession\"\n    ]), l = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(f(u().mark(function e() {\n        var t, r, n, o, i, l, f, g, p, d, v, y, m, b, w, E, O, _, k, L, I, R, U, S, A;\n        return u().wrap(function(e) {\n            for(;;)switch(e.prev = e.next){\n                case 0:\n                    return e.prev = 0, e.next = 3, j(a);\n                case 3:\n                    if (null != (t = e.sent)) {\n                        e.next = 6;\n                        break;\n                    }\n                    return e.abrupt(\"return\");\n                case 6:\n                    r = t.accessToken, n = t.accessTokenEncoded, o = t.featureFlags, i = t.idToken, l = t.organization, f = t.permissions, g = t.user, p = t.userOrganizations, d = function() {\n                        return r;\n                    }, v = function() {\n                        return n;\n                    }, y = function() {\n                        return n;\n                    }, m = function() {\n                        return n;\n                    }, b = function() {\n                        return i;\n                    }, w = function() {\n                        return T;\n                    }, E = function() {\n                        return f;\n                    }, O = function() {\n                        return l;\n                    }, _ = function() {\n                        return g;\n                    }, k = function() {\n                        return p;\n                    }, L = function(e) {\n                        var r = \"access_token\" === (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : \"access_token\") ? t.accessToken : t.idToken;\n                        return r ? {\n                            name: e,\n                            value: r[e]\n                        } : null;\n                    }, I = function(e, t, r) {\n                        var n = o, i = n && n[e] ? n[e] : {};\n                        if (0 === Object.keys(i).length && null == t) throw Error(\"Flag \".concat(e, \" was not found, and no default value has been provided\"));\n                        if (r && i.t && r !== i.t) throw Error(\"Flag \".concat(e, \" is of type \").concat(D[i.t], \" - requested type \").concat(D[r]));\n                        return {\n                            code: e,\n                            type: D[i.t || r],\n                            value: null == i.v ? t : i.v,\n                            is_default: null == i.v,\n                            defaultValue: t\n                        };\n                    }, R = function(e, t) {\n                        try {\n                            return I(e, t, \"b\").value;\n                        } catch (e) {\n                            P.isDebugMode && console.error(e);\n                        }\n                    }, U = function(e, t) {\n                        try {\n                            return I(e, t, \"s\").value;\n                        } catch (e) {\n                            P.isDebugMode && console.error(e);\n                        }\n                    }, S = function(e, t) {\n                        try {\n                            return I(e, t, \"i\").value;\n                        } catch (e) {\n                            P.isDebugMode && console.error(e);\n                        }\n                    }, A = function(e) {\n                        return {\n                            isGranted: f.permissions.some(function(t) {\n                                return t === e;\n                            }),\n                            orgCode: l.orgCode\n                        };\n                    }, h(function(e) {\n                        return c(c({}, e), {}, {\n                            accessToken: r,\n                            accessTokenEncoded: n,\n                            accessTokenRaw: n,\n                            idToken: i,\n                            idTokenRaw: T,\n                            idTokenEncoded: T,\n                            isLoading: !1,\n                            organization: l,\n                            permissions: f,\n                            user: g,\n                            userOrganizations: p,\n                            getAccessToken: d,\n                            getAccessTokenRaw: v,\n                            getAccessTokenEncoded: y,\n                            getBooleanFlag: R,\n                            getClaim: L,\n                            getFlag: I,\n                            getIdToken: b,\n                            getIdTokenRaw: w,\n                            getIntegerFlag: S,\n                            getOrganization: O,\n                            getPermission: A,\n                            getPermissions: E,\n                            getStringFlag: U,\n                            getToken: m,\n                            getUser: _,\n                            getUserOrganizations: k,\n                            refreshData: s\n                        });\n                    }), e.next = 30;\n                    break;\n                case 26:\n                    e.prev = 26, e.t0 = e.catch(0), P.isDebugMode && console.error(e.t0), h(function(t) {\n                        return c(c({}, t), {}, {\n                            isLoading: !1,\n                            error: e.t0\n                        });\n                    });\n                case 30:\n                case \"end\":\n                    return e.stop();\n            }\n        }, e, null, [\n            [\n                0,\n                26\n            ]\n        ]);\n    })), [\n        a\n    ]), g = d((0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(c({}, P.initialState)), 2), p = g[0], h = g[1];\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n        var e = function() {\n            var e = f(u().mark(function e() {\n                return u().wrap(function(e) {\n                    for(;;)switch(e.prev = e.next){\n                        case 0:\n                            return e.next = 2, l();\n                        case 2:\n                            h(function(e) {\n                                return c(c({}, e), {}, {\n                                    isLoading: !1\n                                });\n                            });\n                        case 3:\n                        case \"end\":\n                            return e.stop();\n                    }\n                }, e);\n            }));\n            return function() {\n                return e.apply(this, arguments);\n            };\n        }();\n        p.user || e();\n    }, [\n        p.user\n    ]);\n    var v = p.user, y = p.accessToken, m = p.accessTokenRaw, b = p.accessTokenEncoded, w = p.idToken, E = p.idTokenEncoded, T = p.idTokenRaw, O = p.getAccessToken, _ = p.getAccessTokenRaw, k = p.getIdTokenRaw, L = p.getToken, I = p.getClaim, R = p.getFlag, U = p.getIdToken, x = p.getBooleanFlag, N = p.getStringFlag, F = p.getIntegerFlag, C = p.getOrganization, z = p.getPermission, K = p.getPermissions, G = p.getUser, H = p.getUserOrganizations, M = p.permissions, B = p.organization, X = p.userOrganizations, V = p.error, W = p.isLoading;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(A.Provider, {\n        value: {\n            user: v,\n            error: V,\n            accessToken: y,\n            idToken: w,\n            accessTokenEncoded: b,\n            accessTokenRaw: m,\n            idTokenEncoded: E,\n            idTokenRaw: T,\n            getAccessToken: O,\n            getAccessTokenRaw: _,\n            getToken: L,\n            getClaim: I,\n            getFlag: R,\n            getIdToken: U,\n            getIdTokenRaw: k,\n            getBooleanFlag: x,\n            getStringFlag: N,\n            getIntegerFlag: F,\n            getOrganization: C,\n            getPermission: z,\n            getPermissions: K,\n            getUser: G,\n            getUserOrganizations: H,\n            permissions: M,\n            organization: B,\n            userOrganizations: X,\n            isLoading: W,\n            isAuthenticated: !!v,\n            refreshData: s\n        }\n    }, r);\n}, F = function() {\n    return F = Object.assign || function(e) {\n        for(var t, r = 1, n = arguments.length; r < n; r++)for(var o in t = arguments[r])Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);\n        return e;\n    }, F.apply(this, arguments);\n};\nfunction C(e, t, r, n) {\n    return new (r || (r = Promise))(function(o, i) {\n        function a(e) {\n            try {\n                u(n.next(e));\n            } catch (e) {\n                i(e);\n            }\n        }\n        function c(e) {\n            try {\n                u(n.throw(e));\n            } catch (e) {\n                i(e);\n            }\n        }\n        function u(e) {\n            var t;\n            e.done ? o(e.value) : (t = e.value, t instanceof r ? t : new r(function(e) {\n                e(t);\n            })).then(a, c);\n        }\n        u((n = n.apply(e, t || [])).next());\n    });\n}\nfunction z(e, t) {\n    var r, n, o, i, a = {\n        label: 0,\n        sent: function() {\n            if (1 & o[0]) throw o[1];\n            return o[1];\n        },\n        trys: [],\n        ops: []\n    };\n    return i = {\n        next: c(0),\n        throw: c(1),\n        return: c(2)\n    }, \"function\" == typeof Symbol && (i[Symbol.iterator] = function() {\n        return this;\n    }), i;\n    function c(c) {\n        return function(u) {\n            return function(c) {\n                if (r) throw new TypeError(\"Generator is already executing.\");\n                for(; i && (i = 0, c[0] && (a = 0)), a;)try {\n                    if (r = 1, n && (o = 2 & c[0] ? n.return : c[0] ? n.throw || ((o = n.return) && o.call(n), 0) : n.next) && !(o = o.call(n, c[1])).done) return o;\n                    switch(n = 0, o && (c = [\n                        2 & c[0],\n                        o.value\n                    ]), c[0]){\n                        case 0:\n                        case 1:\n                            o = c;\n                            break;\n                        case 4:\n                            return a.label++, {\n                                value: c[1],\n                                done: !1\n                            };\n                        case 5:\n                            a.label++, n = c[1], c = [\n                                0\n                            ];\n                            continue;\n                        case 7:\n                            c = a.ops.pop(), a.trys.pop();\n                            continue;\n                        default:\n                            if (!(o = a.trys, (o = o.length > 0 && o[o.length - 1]) || 6 !== c[0] && 2 !== c[0])) {\n                                a = 0;\n                                continue;\n                            }\n                            if (3 === c[0] && (!o || c[1] > o[0] && c[1] < o[3])) {\n                                a.label = c[1];\n                                break;\n                            }\n                            if (6 === c[0] && a.label < o[1]) {\n                                a.label = o[1], o = c;\n                                break;\n                            }\n                            if (o && a.label < o[2]) {\n                                a.label = o[2], a.ops.push(c);\n                                break;\n                            }\n                            o[2] && a.ops.pop(), a.trys.pop();\n                            continue;\n                    }\n                    c = t.call(e, a);\n                } catch (e) {\n                    c = [\n                        6,\n                        e\n                    ], n = 0;\n                } finally{\n                    r = o = 0;\n                }\n                if (5 & c[0]) throw c[1];\n                return {\n                    value: c[0] ? c[1] : void 0,\n                    done: !0\n                };\n            }([\n                c,\n                u\n            ]);\n        };\n    }\n}\n\"function\" == typeof SuppressedError && SuppressedError;\nvar K = function(e) {\n    void 0 === e && (e = process.env.NEXT_PUBLIC_KINDE_AUTH_API_PATH || process.env.KINDE_AUTH_API_PATH || \"/api/auth\");\n    var t = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n        accessToken: null,\n        accessTokenRaw: null,\n        error: null,\n        featureFlags: [],\n        idToken: null,\n        idTokenRaw: null,\n        isAuthenticated: !1,\n        isLoading: !0,\n        organization: null,\n        permissions: [],\n        user: null,\n        userOrganizations: null\n    }), r = t[0], n = t[1];\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n        a();\n    }, []);\n    var a = function() {\n        return C(void 0, void 0, void 0, function() {\n            var t, r, o, i, a, c;\n            return z(this, function(u) {\n                switch(u.label){\n                    case 0:\n                        return t = \"\".concat(e, \"/\").concat(S.setup), [\n                            4,\n                            fetch(t)\n                        ];\n                    case 1:\n                        return [\n                            4,\n                            (r = u.sent()).json()\n                        ];\n                    case 2:\n                        if (o = u.sent(), i = o.message, a = o.error, c = function(e, t) {\n                            var r = {};\n                            for(var n in e)Object.prototype.hasOwnProperty.call(e, n) && t.indexOf(n) < 0 && (r[n] = e[n]);\n                            if (null != e && \"function\" == typeof Object.getOwnPropertySymbols) {\n                                var o = 0;\n                                for(n = Object.getOwnPropertySymbols(e); o < n.length; o++)t.indexOf(n[o]) < 0 && Object.prototype.propertyIsEnumerable.call(e, n[o]) && (r[n[o]] = e[n[o]]);\n                            }\n                            return r;\n                        }(o, [\n                            \"message\",\n                            \"error\"\n                        ]), !r.ok) return n(function(e) {\n                            return F(F({}, e), {\n                                isLoading: !1,\n                                error: \"\".concat(i, \": \").concat(a || \"An error occurred\")\n                            });\n                        }), [\n                            2\n                        ];\n                        switch(i){\n                            case \"OK\":\n                                n(F(F({}, c), {\n                                    isLoading: !1\n                                }));\n                                break;\n                            case \"NOT_LOGGED_IN\":\n                                n(function(e) {\n                                    return F(F({}, e), {\n                                        isLoading: !1\n                                    });\n                                });\n                                break;\n                            default:\n                                n(function(e) {\n                                    return F(F({}, e), {\n                                        isLoading: !1,\n                                        error: \"\".concat(i, \": \").concat(a || \"An error occurred\")\n                                    });\n                                });\n                        }\n                        return [\n                            2\n                        ];\n                }\n            });\n        });\n    }, c = function(e, t, n) {\n        var o = r.featureFlags || [], i = o && o[e] ? o[e] : null;\n        if (!i && null == t) throw Error(\"Flag \".concat(e, \" was not found, and no default value has been provided\"));\n        if (n && i.t && n !== i.t) throw Error(\"Flag \".concat(e, \" is of type \").concat(D[i.t], \" - requested type \").concat(D[n]));\n        return {\n            code: e,\n            type: D[i.t || n],\n            value: null == i.v ? t : i.v,\n            is_default: null == i.v,\n            defaultValue: t\n        };\n    };\n    return F(F({}, r), {\n        isAuthenticated: !!r.user,\n        getUser: function() {\n            return r.user;\n        },\n        getIdTokenRaw: function() {\n            return r.idTokenRaw;\n        },\n        getPermission: function(e) {\n            var t, n;\n            return r.permissions ? {\n                isGranted: null === (t = r.permissions.permissions) || void 0 === t ? void 0 : t.some(function(t) {\n                    return t === e;\n                }),\n                orgCode: null === (n = r.organization) || void 0 === n ? void 0 : n.orgCode\n            } : {\n                isGranted: !1,\n                orgCode: null\n            };\n        },\n        getBooleanFlag: function(e, t) {\n            try {\n                return c(e, t, \"b\").value;\n            } catch (e) {\n                P.isDebugMode && console.error(e);\n            }\n        },\n        getIntegerFlag: function(e, t) {\n            try {\n                return c(e, t, \"i\").value;\n            } catch (e) {\n                P.isDebugMode && console.error(e);\n            }\n        },\n        getFlag: c,\n        getStringFlag: function(e, t) {\n            try {\n                return c(e, t, \"s\").value;\n            } catch (e) {\n                P.isDebugMode && console.error(e);\n            }\n        },\n        getClaim: function(e, t) {\n            void 0 === t && (t = \"access_token\");\n            var n = \"access_token\" === t ? r.accessToken : r.idToken;\n            return n ? {\n                name: e,\n                value: n[e]\n            } : null;\n        },\n        getAccessToken: function() {\n            return r.accessToken;\n        },\n        getToken: function() {\n            return r.accessTokenEncoded;\n        },\n        getAccessTokenRaw: function() {\n            return r.accessTokenEncoded;\n        },\n        getIdToken: function() {\n            return r.idToken;\n        },\n        getOrganization: function() {\n            return r.organization;\n        },\n        getPermissions: function() {\n            return r.permissions;\n        },\n        getUserOrganizations: function() {\n            return r.userOrganizations;\n        },\n        refreshData: a\n    });\n}, G = [\n    \"children\",\n    \"orgCode\",\n    \"postLoginRedirectURL\",\n    \"authUrlParams\"\n];\nfunction H(t) {\n    var r = t.children, n = t.orgCode, o = t.postLoginRedirectURL, i = t.authUrlParams, a = h(t, G), u = new URLSearchParams, s = {};\n    for(var l in null != n && (s.org_code = n), null != o && (s.post_login_redirect_url = o), s = c(c({}, i), s))u.append(l, s[l]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"a\", p({\n        href: \"\".concat(P.apiPath, \"/\").concat(S.register).concat(u ? \"?\".concat(u.toString()) : \"\")\n    }, a), r);\n}\nvar M = [\n    \"children\",\n    \"postLoginRedirectURL\",\n    \"orgCode\",\n    \"authUrlParams\"\n];\nfunction B(t) {\n    var r = t.children, n = t.postLoginRedirectURL, o = t.orgCode, i = t.authUrlParams, a = h(t, M), u = new URLSearchParams, s = {};\n    if (null != o && (s.org_code = o), null != n) {\n        var l;\n        if (null !== (l = n) && void 0 !== l && l.startsWith(\"/\")) {\n            var f =  false ? 0 : process.env.KINDE_SITE_URL;\n            n = \"\".concat(f).concat(n);\n        }\n        s.post_login_redirect_url = n;\n    }\n    for(var g in s = c(c({}, i), s))u.append(g, s[g]);\n    var d = \"\".concat(P.apiPath, \"/\").concat(S.login).concat(u ? \"?\".concat(u.toString()) : \"\");\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"a\", p({\n        href: d\n    }, a), r);\n}\nvar X = [\n    \"children\",\n    \"postLogoutRedirectURL\"\n];\nfunction V(t) {\n    var r = t.children, n = t.postLogoutRedirectURL, o = h(t, X);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"a\", p({\n        href: \"\".concat(P.apiPath, \"/\").concat(S.logout).concat(n ? \"?post_logout_redirect_url=\".concat(n) : \"\")\n    }, o), r);\n}\nvar W = [\n    \"children\",\n    \"orgName\"\n];\nfunction q(t) {\n    var r = t.children, n = t.orgName, o = h(t, W);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"a\", p({\n        href: \"\".concat(P.apiPath, \"/\").concat(S.createOrg).concat(n ? \"?org_name=\".concat(n) : \"\")\n    }, o), r);\n}\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@kinde-oss/kinde-auth-nextjs/dist/index.js\n");

/***/ })

};
;